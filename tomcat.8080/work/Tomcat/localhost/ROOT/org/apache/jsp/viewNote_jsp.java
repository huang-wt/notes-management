/*
 * Generated by the Jasper component of Apache Tomcat
 * Version: Apache Tomcat/9.0.45
 * Generated at: 2022-03-29 22:41:41 UTC
 * Note: The last modified time of this file was set to
 *       the last modified time of the source file after
 *       generation to assist with modification tracking.
 */
package org.apache.jsp;

import javax.servlet.*;
import javax.servlet.http.*;
import javax.servlet.jsp.*;
import java.util.List;

public final class viewNote_jsp extends org.apache.jasper.runtime.HttpJspBase
    implements org.apache.jasper.runtime.JspSourceDependent,
                 org.apache.jasper.runtime.JspSourceImports {

  private static final javax.servlet.jsp.JspFactory _jspxFactory =
          javax.servlet.jsp.JspFactory.getDefaultFactory();

  private static java.util.Map<java.lang.String,java.lang.Long> _jspx_dependants;

  private static final java.util.Set<java.lang.String> _jspx_imports_packages;

  private static final java.util.Set<java.lang.String> _jspx_imports_classes;

  static {
    _jspx_imports_packages = new java.util.HashSet<>();
    _jspx_imports_packages.add("javax.servlet");
    _jspx_imports_packages.add("javax.servlet.http");
    _jspx_imports_packages.add("javax.servlet.jsp");
    _jspx_imports_classes = new java.util.HashSet<>();
    _jspx_imports_classes.add("java.util.List");
  }

  private volatile javax.el.ExpressionFactory _el_expressionfactory;
  private volatile org.apache.tomcat.InstanceManager _jsp_instancemanager;

  public java.util.Map<java.lang.String,java.lang.Long> getDependants() {
    return _jspx_dependants;
  }

  public java.util.Set<java.lang.String> getPackageImports() {
    return _jspx_imports_packages;
  }

  public java.util.Set<java.lang.String> getClassImports() {
    return _jspx_imports_classes;
  }

  public javax.el.ExpressionFactory _jsp_getExpressionFactory() {
    if (_el_expressionfactory == null) {
      synchronized (this) {
        if (_el_expressionfactory == null) {
          _el_expressionfactory = _jspxFactory.getJspApplicationContext(getServletConfig().getServletContext()).getExpressionFactory();
        }
      }
    }
    return _el_expressionfactory;
  }

  public org.apache.tomcat.InstanceManager _jsp_getInstanceManager() {
    if (_jsp_instancemanager == null) {
      synchronized (this) {
        if (_jsp_instancemanager == null) {
          _jsp_instancemanager = org.apache.jasper.runtime.InstanceManagerFactory.getInstanceManager(getServletConfig());
        }
      }
    }
    return _jsp_instancemanager;
  }

  public void _jspInit() {
  }

  public void _jspDestroy() {
  }

  public void _jspService(final javax.servlet.http.HttpServletRequest request, final javax.servlet.http.HttpServletResponse response)
      throws java.io.IOException, javax.servlet.ServletException {

    if (!javax.servlet.DispatcherType.ERROR.equals(request.getDispatcherType())) {
      final java.lang.String _jspx_method = request.getMethod();
      if ("OPTIONS".equals(_jspx_method)) {
        response.setHeader("Allow","GET, HEAD, POST, OPTIONS");
        return;
      }
      if (!"GET".equals(_jspx_method) && !"POST".equals(_jspx_method) && !"HEAD".equals(_jspx_method)) {
        response.setHeader("Allow","GET, HEAD, POST, OPTIONS");
        response.sendError(HttpServletResponse.SC_METHOD_NOT_ALLOWED, "JSPs only permit GET, POST or HEAD. Jasper also permits OPTIONS");
        return;
      }
    }

    final javax.servlet.jsp.PageContext pageContext;
    javax.servlet.http.HttpSession session = null;
    final javax.servlet.ServletContext application;
    final javax.servlet.ServletConfig config;
    javax.servlet.jsp.JspWriter out = null;
    final java.lang.Object page = this;
    javax.servlet.jsp.JspWriter _jspx_out = null;
    javax.servlet.jsp.PageContext _jspx_page_context = null;


    try {
      response.setContentType("text/html;charset=UTF-8");
      pageContext = _jspxFactory.getPageContext(this, request, response,
      			null, true, 8192, true);
      _jspx_page_context = pageContext;
      application = pageContext.getServletContext();
      config = pageContext.getServletConfig();
      session = pageContext.getSession();
      out = pageContext.getOut();
      _jspx_out = out;

      out.write("\n");
      out.write("\n");
      out.write("\n");
      out.write("<html>\n");
      out.write("<head>\n");
      out.write("  ");
      org.apache.jasper.runtime.JspRuntimeLibrary.include(request, response, "./meta.jsp", out, false);
      out.write("\n");
      out.write("  <title>Notes Manager App</title>\n");
      out.write("  <style>\n");
      out.write("    .main {\n");
      out.write("      height: 2000px;\n");
      out.write("      padding-top: 30px;\n");
      out.write("    }\n");
      out.write("    h2 {\n");
      out.write("      margin-top: 0;\n");
      out.write("    }\n");
      out.write("    .sidebar {\n");
      out.write("      float: left;\n");
      out.write("      height: 2000px;\n");
      out.write("    }\n");
      out.write("    button {\n");
      out.write("      background: white;\n");
      out.write("      text-decoration: underline;\n");
      out.write("      border: white;\n");
      out.write("      font-size: 16px;\n");
      out.write("      padding-bottom: 5px;\n");
      out.write("    }\n");
      out.write("    button:focus {\n");
      out.write("      font-weight: bold;\n");
      out.write("    }\n");
      out.write("    button:hover {\n");
      out.write("      font-weight: bold;\n");
      out.write("    }\n");
      out.write("    .displayNote {\n");
      out.write("      float: right;\n");
      out.write("      width: 80%;\n");
      out.write("      height: 2000px;\n");
      out.write("      background-color: azure;\n");
      out.write("    }\n");
      out.write("    .opBar {\n");
      out.write("      width: 100%;\n");
      out.write("      height: 30px;\n");
      out.write("      list-style: none;\n");
      out.write("      padding: 10px 0 0;\n");
      out.write("      margin-bottom: 0;\n");
      out.write("      margin-top: 0;\n");
      out.write("    }\n");
      out.write("    .opBar li {\n");
      out.write("        width: 16%;\n");
      out.write("        float: left;\n");
      out.write("        line-height: 45px;\n");
      out.write("        text-align: center;\n");
      out.write("    }\n");
      out.write("    .opBar button {\n");
      out.write("        text-align: center;\n");
      out.write("        font-size: 20px;\n");
      out.write("        font-family: Times;\n");
      out.write("        color: #000;\n");
      out.write("        margin: 0 auto;\n");
      out.write("        background: azure;\n");
      out.write("    }\n");
      out.write("    .note {\n");
      out.write("      margin-left: 30px;\n");
      out.write("      margin-right: 20px;\n");
      out.write("      font-family: 'Gill Sans', 'Gill Sans MT', Calibri, 'Trebuchet MS', sans-serif;\n");
      out.write("    }\n");
      out.write("  </style>\n");
      out.write("</head>\n");
      out.write("<body>\n");
      org.apache.jasper.runtime.JspRuntimeLibrary.include(request, response, "/header.jsp", out, false);
      out.write("\n");
      out.write("<div class=\"main\">\n");
      out.write("  <div class=\"sidebar\">\n");
      out.write("    <h2>Notes List:</h2>\n");
      out.write("    <form action=\"#\">\n");
      out.write("      <button type=\"submit\" name=\"order\" value=\"sorted\"> Sorted Order </button>\n");
      out.write("      <button type=\"submit\" name=\"order\" value=\"added\"> Order Added </button>\n");
      out.write("    </form>\n");
      out.write("    <ul>\n");
      out.write("      <form action=\"#\">\n");
      out.write("        ");

          List<String> notes = (List<String>) request.getAttribute("noteNames");
          for (String note : notes)
          {
        
      out.write("\n");
      out.write("        <li>\n");
      out.write("          <button type=\"submit\" name=\"index\" value=\"");
      out.print(note);
      out.write('"');
      out.write('>');
      out.write(' ');
      out.print(note);
      out.write(" </button>\n");
      out.write("        </li>\n");
      out.write("        ");
 } 
      out.write("\n");
      out.write("      </form>\n");
      out.write("    </ul>\n");
      out.write("  </div>\n");
      out.write("  <div class=\"displayNote\">\n");
      out.write("    <div>\n");
      out.write("      <ul class=\"opBar\">\n");
      out.write("        <li>\n");
      out.write("          <form action=\"newNote.html\">\n");
      out.write("            <button type=\"submit\" name=\"op\" value=\"create\"> New Note </button>\n");
      out.write("          </form>\n");
      out.write("        </li>\n");
      out.write("        <li>\n");
      out.write("          <form action=\"modifyNote.html\">\n");
      out.write("            <button type=\"submit\" name=\"op\" value=\"modify\"> Modify </button>\n");
      out.write("          </form>\n");
      out.write("        </li>\n");
      out.write("        <li>\n");
      out.write("          <form action=\"deleteNote.html\">\n");
      out.write("            <button type=\"submit\" name=\"op\" value=\"delete\"> Delete </button>\n");
      out.write("          </form>\n");
      out.write("        </li>\n");
      out.write("        <li>\n");
      out.write("          <form action=\"renameNote.html\">\n");
      out.write("            <button type=\"submit\" name=\"op\" value=\"rename\"> Rename </button>\n");
      out.write("          </form>\n");
      out.write("        </li>\n");
      out.write("        <li>\n");
      out.write("          <form action=\"search.jsp\">\n");
      out.write("            <button type=\"submit\" name=\"op\" value=\"search\"> Search </button>\n");
      out.write("          </form>\n");
      out.write("        </li>\n");
      out.write("        <li>\n");
      out.write("          <form action=\"index.jsp\">\n");
      out.write("            <button type=\"submit\" name=\"op\" value=\"home\"> Home Page </button>\n");
      out.write("          </form>\n");
      out.write("        </li>\n");
      out.write("      </ul>\n");
      out.write("    </div>\n");
      out.write("\n");
      out.write("    <div class=\"note\">\n");
      out.write("    ");

      String noteName;
      if ((noteName = request.getParameter("index")) != null)
      {
        List<String> contents = (List<String>) request.getAttribute(noteName); 
      out.write("\n");
      out.write("        <h3>");
      out.print(noteName);
      out.write("</h3>\n");
      out.write("        <p>\n");
      out.write("        ");
 for (String line : contents)
        {
          if (line.length() > 5 && "<img>".equals(line.substring(0, 5)))
          {
            String path = line.substring(5);
        
      out.write("\n");
      out.write("            <div>\n");
      out.write("              <img src=\"");
      out.print(path);
      out.write("\" width=\"60%\">\n");
      out.write("            </div>\n");
      out.write("          ");
 }
          else if (line.length() > 5 && "<url>".equals(line.substring(0, 5)))
          {
            String path = line.substring(5);
        
      out.write("\n");
      out.write("            <p><a href=\"");
      out.print(path);
      out.write('"');
      out.write('>');
      out.print(path);
      out.write("</a></p>\n");
      out.write("          ");
 }
          else
          { 
      out.write("\n");
      out.write("            ");
      out.print(line);
      out.write(" <br>\n");
      out.write("          ");
}
        } 
      out.write("\n");
      out.write("        </p>\n");
      out.write("    ");
 } 
      out.write("\n");
      out.write("    </div>\n");
      out.write("  </div>\n");
      out.write("</div>\n");
      out.write("</body>\n");
      out.write("</html>\n");
    } catch (java.lang.Throwable t) {
      if (!(t instanceof javax.servlet.jsp.SkipPageException)){
        out = _jspx_out;
        if (out != null && out.getBufferSize() != 0)
          try {
            if (response.isCommitted()) {
              out.flush();
            } else {
              out.clearBuffer();
            }
          } catch (java.io.IOException e) {}
        if (_jspx_page_context != null) _jspx_page_context.handlePageException(t);
        else throw new ServletException(t);
      }
    } finally {
      _jspxFactory.releasePageContext(_jspx_page_context);
    }
  }
}
